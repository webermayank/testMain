name: Detect JSDoc Changes & Create Issue

on:
  push:
    branches:
      - main
    paths:
      - 'src/**' # Detect changes in all files inside src/

jobs:
  detect-and-create-issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Extract and Compare JSDoc
        run: node ./scripts/compare-docs.js

      - name: Read changes JSON
        id: read-changes
        run: |
          if [ -s docs_changes.json ]; then
            echo "Changes detected!"
            echo "CHANGES=$(jq -c . docs_changes.json)" >> "$GITHUB_ENV"
          else
            echo "No changes detected."
            echo "CHANGES=[]" >> "$GITHUB_ENV"
          fi

      - name: Debug changed files
        run: |
          echo "Detected Changes: ${{ steps.detect-changes.outputs.CHANGES }}"


      - name: Debug Output
        run: |
          echo "Detected Changes: $CHANGES"
        env:
          CHANGES: ${{ env.CHANGES }}

      - name: Create Issue in testWebsite
        uses: actions/github-script@v7
        env:
          CHANGES: ${{ env.CHANGES }}
        with:
          github-token: ${{ secrets.WEBSITE_REPO_TOKEN }}
          script: |
            const changes = JSON.parse(process.env.CHANGES || '[]'); // âœ… Prevents parsing errors
            if (changes.length === 0) {
              console.log("No changes detected. Skipping issue creation.");
              return;
            }
            
            let issueBody = changes.map(change => 
              `- **File**: \`${change.file}\`\n  - **Line**: ${change.line}\n  - **Old**: ${change.old || "N/A"}\n  - **New**: ${change.new || "N/A"}`
            ).join("\n\n");

            issueBody += "\n\nðŸ“Œ **Translation needed in:**\n";
            const languages = ["en", "es", "fr", "de"];
            changes.forEach(change => {
              languages.forEach(lang => {
                issueBody += `- [ ] \`reference/${lang}/${change.file.replace(/^src\//, '')}.mdx\`\n`;
              });
            });

            await github.rest.issues.create({
              owner: "webermayank",
              repo: "testWebsite",
              title: `${changes[0].file} updated in P5.js â€“ Translation Needed`,
              body: `The following documentation updates require translation:\n\n${issueBody}\n\n[View Merged PR](https://github.com/webermayank/TestMain/commit/${process.env.GITHUB_SHA})`
            });

            console.log("Issue created successfully.");
            console.log("Issue Body:", issueBody);